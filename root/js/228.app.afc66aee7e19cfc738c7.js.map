{"version":3,"file":"js/228.app.afc66aee7e19cfc738c7.js","mappings":"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","sources":["webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/ReorderContext.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/components/Reorder/Group.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/components/Reorder/utils/check-reorder.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/components/Reorder/Item.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/components/Reorder/index.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/transform.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/gestures/drag/use-drag-controls.mjs","webpack://Webpack by Puzik/./node_modules/framer-motion/dist/es/utils/use-constant.mjs"],"sourcesContent":["const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { createContext } from 'react';\n\nconst ReorderContext = createContext(null);\n\nexport { ReorderContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.12\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { checkReorder } from './utils/check-reorder.mjs';\n\nfunction ReorderGroup({ children, as = \"ul\", axis = \"y\", onReorder, values, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const order = [];\n    const isReordering = useRef(false);\n    invariant(Boolean(values), \"Reorder.Group must be provided a values prop\");\n    const context = {\n        axis,\n        registerItem: (value, layout) => {\n            /**\n             * Ensure entries can't add themselves more than once\n             */\n            if (layout &&\n                order.findIndex((entry) => value === entry.value) === -1) {\n                order.push({ value, layout: layout[axis] });\n                order.sort(compareMin);\n            }\n        },\n        updateOrder: (id, offset, velocity) => {\n            if (isReordering.current)\n                return;\n            const newOrder = checkReorder(order, id, offset, velocity);\n            if (order !== newOrder) {\n                isReordering.current = true;\n                onReorder(newOrder\n                    .map(getValue)\n                    .filter((value) => values.indexOf(value) !== -1));\n            }\n        },\n    };\n    useEffect(() => {\n        isReordering.current = false;\n    });\n    return (React.createElement(Component, { ...props, ref: externalRef, ignoreStrict: true },\n        React.createElement(ReorderContext.Provider, { value: context }, children)));\n}\nconst Group = forwardRef(ReorderGroup);\nfunction getValue(item) {\n    return item.value;\n}\nfunction compareMin(a, b) {\n    return a.layout.min - b.layout.min;\n}\n\nexport { Group, ReorderGroup };\n","import { moveItem } from '../../../utils/array.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\nfunction checkReorder(order, value, offset, velocity) {\n    if (!velocity)\n        return order;\n    const index = order.findIndex((item) => item.value === value);\n    if (index === -1)\n        return order;\n    const nextOffset = velocity > 0 ? 1 : -1;\n    const nextItem = order[index + nextOffset];\n    if (!nextItem)\n        return order;\n    const item = order[index];\n    const nextLayout = nextItem.layout;\n    const nextItemCenter = mix(nextLayout.min, nextLayout.max, 0.5);\n    if ((nextOffset === 1 && item.layout.max + offset > nextItemCenter) ||\n        (nextOffset === -1 && item.layout.min + offset < nextItemCenter)) {\n        return moveItem(order, index, index + nextOffset);\n    }\n    return order;\n}\n\nexport { checkReorder };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { cancelFrame, frame } from '../frameloop/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { invariant } from '../../utils/errors.mjs';\nimport * as React from 'react';\nimport { forwardRef, useContext, useRef, useEffect } from 'react';\nimport { ReorderContext } from '../../context/ReorderContext.mjs';\nimport { motion } from '../../render/dom/motion.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useMotionValue } from '../../value/use-motion-value.mjs';\nimport { useTransform } from '../../value/use-transform.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction useDefaultMotionValue(value, defaultValue = 0) {\n    return isMotionValue(value) ? value : useMotionValue(defaultValue);\n}\nfunction ReorderItem({ children, style = {}, value, as = \"li\", onDrag, layout = true, ...props }, externalRef) {\n    const Component = useConstant(() => motion(as));\n    const context = useContext(ReorderContext);\n    const point = {\n        x: useDefaultMotionValue(style.x),\n        y: useDefaultMotionValue(style.y),\n    };\n    const zIndex = useTransform([point.x, point.y], ([latestX, latestY]) => latestX || latestY ? 1 : \"unset\");\n    const measuredLayout = useRef(null);\n    invariant(Boolean(context), \"Reorder.Item must be a child of Reorder.Group\");\n    const { axis, registerItem, updateOrder } = context;\n    useEffect(() => {\n        registerItem(value, measuredLayout.current);\n    }, [context]);\n    return (React.createElement(Component, { drag: axis, ...props, dragSnapToOrigin: true, style: { ...style, x: point.x, y: point.y, zIndex }, layout: layout, onDrag: (event, gesturePoint) => {\n            const { velocity } = gesturePoint;\n            velocity[axis] &&\n                updateOrder(value, point[axis].get(), velocity[axis]);\n            onDrag && onDrag(event, gesturePoint);\n        }, onLayoutMeasure: (measured) => {\n            measuredLayout.current = measured;\n        }, ref: externalRef, ignoreStrict: true }, children));\n}\nconst Item = forwardRef(ReorderItem);\n\nexport { Item, ReorderItem };\n","import { Group } from './Group.mjs';\nimport { Item } from './Item.mjs';\n\nconst Reorder = {\n    Group,\n    Item,\n};\n\nexport { Reorder };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nclass DragControls {\n    constructor() {\n        this.componentControls = new Set();\n    }\n    /**\n     * Subscribe a component's internal `VisualElementDragControls` to the user-facing API.\n     *\n     * @internal\n     */\n    subscribe(controls) {\n        this.componentControls.add(controls);\n        return () => this.componentControls.delete(controls);\n    }\n    /**\n     * Start a drag gesture on every `motion` component that has this set of drag controls\n     * passed into it via the `dragControls` prop.\n     *\n     * ```jsx\n     * dragControls.start(e, {\n     *   snapToCursor: true\n     * })\n     * ```\n     *\n     * @param event - PointerEvent\n     * @param options - Options\n     *\n     * @public\n     */\n    start(event, options) {\n        this.componentControls.forEach((controls) => {\n            controls.start(event.nativeEvent || event, options);\n        });\n    }\n}\nconst createDragControls = () => new DragControls();\n/**\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\n * might want to initiate that dragging from a different component than the draggable one.\n *\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\n * the draggable component's `dragControls` prop. It exposes a `start` method\n * that can start dragging from pointer events on other components.\n *\n * ```jsx\n * const dragControls = useDragControls()\n *\n * function startDrag(event) {\n *   dragControls.start(event, { snapToCursor: true })\n * }\n *\n * return (\n *   <>\n *     <div onPointerDown={startDrag} />\n *     <motion.div drag=\"x\" dragControls={dragControls} />\n *   </>\n * )\n * ```\n *\n * @public\n */\nfunction useDragControls() {\n    return useConstant(createDragControls);\n}\n\nexport { DragControls, useDragControls };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n"],"names":["noop","any","warning","invariant","ReorderContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","useContext","layoutId","useLayoutId","context","initial","undefined","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useHTMLProps","htmlProps","assign","useInitialMotionValues","transformValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","root","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","interpolate","input","isClamp","mixer","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","arr","remaining","offsetProgress","fillOffset","defaultOffset","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","stiffness","damping","mass","isResolvedFromDuration","springOptions","derived","bounce","envelope","derivative","exponentialDecay","exp","f","initialGuess","result","approximateRoot","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueName","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","owner","HTMLElement","acceleratedAnimation","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createAcceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","makeTargetAnimatable","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","resolveCSSVariables","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","Group","as","onReorder","order","isReordering","registerItem","compareMin","updateOrder","newOrder","nextOffset","nextItem","nextLayout","nextItemCenter","toIndex","startIndex","endIndex","moveItem","checkReorder","ignoreStrict","useMotionValue","setLatest","useState","useListTransform","combineValues","updateValue","scheduleUpdate","useCombineMotionValues","useDefaultMotionValue","Reorder","Item","inputRangeOrTransformer","outputRange","useImmediate","argOffset","inputValue","inputRange","isCustomValueType","useTransform","latestX","latestY","gesturePoint","onLayoutMeasure","measured","DragControls","componentControls","nativeEvent","createDragControls","useDragControls","useConstant"],"sourceRoot":""}